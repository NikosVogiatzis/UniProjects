"""
    This is the main core of code of the Scrabble project.
    From here Classes and their objects will get called
""" 
import classes

def guidelines():
    """ 
    Το παρόν project υλοποιεί το την απλοποιημένη μορφή του παιχνιδιού Scrabble όπου παίζει ο άνθρωπος-χρήστης
    με τον υπολογιστή.

    -> Σχετικά με τις κλάσεις:

    Υλοποιήθηκαν 5 βασικές κλάσεις, μία βοηθητική καθώς και 2 βοηθητικές μέθοδοι.
        -> Αναλυτικά: 
        Α)  Η κλάση Game στην οποία φτίαχνεται το κύριο μενού που παραθέτει τις επιλογές (1. Play game , 2. Settings, 3. Statistics, 4 εξοδος)
        Επιλογή 1: Ξεκινά το "παίξιμο" κληρώνοντας τα γράμματα για κάθε παίκτη και σε ατέρμων βρόχο μέχρι η συνθήκη τέλους να γίνει αληθής εξελίσσεται το παιχνίδι.
        Επιλογή 2: Εμφανίζει τον αλγόριθμο με τον οποίο παίζει ο υπολογιστής, δηλαδή τον Smart-Teach.
        Επιλογή 3: Εμφανίζει στατιστικά από προηγούμενες παρτίδες (βλέπε μέθοδο readStatisticsFromFile() της κλάσης FileHandler) ή το μήνυμα "Καμία παρτίδα δεν έχει παιχτεί ακόμη όταν 
                   είναι η πρώτη φορά που κάποιος παίζει το παιχνίδι.
        Επιλογή 4: Εμφανίζει μήνυμα επιβεβαίωσης για έξοδο-τερματισμό της εφαρμογής με επιλογή 1 για επιβεβαίωση και 2 για επιστροφή στο κύριο μενού.
        το παραπάνω μενού υλοποιείται στην μέθοδο setup(), το παίξιμο ξεκινά καλώντας και τρέχωντας τη μέθοδο run() ενώ για τον τερματισμό της εφαρμογής, και την 
        εγγραφή των αποτελεσμάτων στο αρχείο statistics.json καλείται η μέθοδος setup()

        Β) Η κλάση SakClass στην οποία γίνονται απαραίτητες ενέργειες όσον αφορά την κλήρωση γραμμάτων κατά το παίξιμο του παιχνιδιού.
        
        Διαθέτει:
        1) Τη μέθοδο generate_words() η οποία καλεί τη μέθοδο της βοηθητικής κλάσης FileHandler (εξηγείται παρακάτω) για την αρχικοποίηση της δομής 
        που αποθηκεύει όλες τις λέξεις από το αρχείο greek7.txt Η Δ.Δ που επέλεξα είναι το λεξικό στο οποίο κλειδί είναι κάθε γράμμα της ελληνικής αλφαβήτου - άρα
        24 κλειδία - και τιμές των κλειδιών όσες λέξεις ξεκινούν από το συγκεκριμένο γράμμα.
        2) Τη μέθοδο randomize_sak η οποία είναι υπεύθυνη για τον ορισμό της Δ.Δ που αποθηκεύει τα διαθέσιμα γράμματα μαζί με το σκορ και το πλήθος τους ως εξής:
            Η Δομή είναι πάλι ένα λεξικό στο οποίο κλειδιά είναι τα γράμματα της αλφαβήτου και τιμές μία λίστα με 2 κελιά, όπου στο πρώτο κελί αποθηκεύεται το πλήθος διαθέσιμων
            γραμμάτων και στο δεύτερο οι πόντοι του γράμματος αυτού.
        3) Τη μέθοδο get_letters(), η οποία είναι υπεύθυνη για την κλήρωση γραμμάτων. Δέχεται στα ορίσματά της 2 αντικέιμενα, έναν ακέραιο n (τα γράμματα που πρέπει να προστεθούν στη λίστα) και 
            έναν δεύτερο ακέραιο turn που δείχνει την σειρά του παίκτη για τον οποίο πρέπει να γίνει η κλήρωση. 1 -> Άνθρωπος 2 -> Υπολογιστής. Η διαδικασία που ακολουθείται 
            για την κλήρωση είναι ίδια και για τους δύο τύπους παικτών, και η κλήρωση γίνεται με την βοήθεια της random.choices(greek_alphabet, n) όπου greek_alphabet είναι μία
            λίστα με όλα τα γράμματα της αλφαβήτου. ΣΗΜΕΙΩΣΗ: Χρησιμοποιήθηκε η choices διότι επιτρέπει την κλήρωση δύο ίδιων γραμμάτων κάτι που είναι ρεαλιστικό σε σχέση με την samples
            που κληρώνει μοναδικά στοιχεία από τη δοθείσσα λίστα.
        4) Τη μέθοδο put_back_letters() η οποία είναι υπεύθυνη για την επιστροφή γραμμάτων στο σακουλάκι.

        Γ) Η κλάση Player από την οποία κληρονομούν ιδιότητες και μέθοδο οι 2 κλάσεις που περιγράφονται παρακάτω.
        Διαθέτει:
            4 ιδιότητες κοινές για τους δύο τύπους παικτών:     α) Λίστα γραμμάτων, score, passes (πόσα πάσο παίχτηκαν), word (Η λέξη που παίζεται)
            1 κοινή για τις δύο κληροδοτούμενες κλάσεις: compute_score οπου δοθείσσα μία λέξη, η μέθοδος αυτή είναι υπεύθυνη να υπολογίσει τους πόντους της λέξεις και να
                                                        τους επιστρέψει.

            Γ.α) Η κλάση Human η οποία είναι υπεύθυνη για το παίξιμο του παίκτη-ανθρώπου. Κληρονομεί τις ιδιότητες-μεθόδος της κλάσης Player.
                Διαθέτει: 1) Μία μέθοδο τύπου setter για την αρχικοποίηση του ονόματος του παίκτη
                          2) Τη μέθοδο play στην οποία γίνονται οι απαραίτητοι έλεγχοι κατά τη πληκτρολόγηση λέξης από τον παίκτη-άνθρωπο
            Γ.β Η κλάση Computer η οποία είναι υπεύθυνη για το παίξιμο του παίκτη-υπολογιστή. Κληρονομεί κι αυτή τις ιδιότητες-μεθόδους της κλάσης Player
                Διαθέτει: μία βασική μέθοδο play() η οποία υλοποιεί τον αλγόριθμο Smart-Teach. Σημειώνεται ότι η μέθοδος αυτή καλέιται τόσο όταν παίζει ο παίκτης-άνθρωπος
                ώστε να "δείξει" στον παίκτη ποια θα ήταν η καλύτερή του επιλογή, όσο κι όταν παίζει ο παίκτης-υπολογιστής.

        Δ) Η κλάση FileHandler η οποία είναι μία βοηθητική κλάση με μεθόδους οι οποίες μας επιτρέπουν να διαβάσουμε όλες τις λέξεις από το αρχείο greek7.txt και να τις αρχικοποιήσουμε
            ένα λεξικό όπως περιγράφηκε παραπάνω (καλείται από τη generate_words() της SakClass), να γράψουμε στο αρχείο statistics.json τα στατιστικά από μία παρτίδα με την κωδικοποίηση
            json ( καλείται από την end() μέθοδο της κλάσης Game) αλλά και να διαβάσουμε τα στατιστικά από προηγούμενες παρτίδες από το αρχείο statistics.json (καλείται από τη μέθοδο setup() της κλάσης Game)  


        --> Ο αλγόριθμος Smart-Teach!
            Ο υπολογιστής παίζει σύμφωνα με τον παραπάνω αλγόριθμο ο οποίος υλοποιέιται ως εξής:
            Σε μία εμφωλευμένη επανάληψη πραγματοποιούνται οι μεταθέσεις (από 2 - 7) για όλα τα γράμματα που διαθέτει ο παίκτης. Σε μία λίστα combinations κρατάμε όλους τους 
            δυνατούς συνδυασμούς που προέκυψαν από την παραπάνω επανάληψη στην περίπτωση που οι μεταθέσεις αυτές φτιάχνουν μία λέξη υπαρκτη στο greek7.txt . Έπειτα για κάθε
            μία λέξη της λίστας combinations υπολογίζεται το σκορ και κρατάμε αυτή με το μεγαλύτερο. Ο υπολογιστής παίζει αυτή τη λέξη ή/και στην περίπτωση που παίζει ο παίκτης-άνθρωπος
            επιστρέφεται ώστε να του "δείξει" ποια ήταν η σωστότερή του επιλογή.
        Σημειώνεται ότι όλες οι κλάσεις διαθέτουν τις __init__() και __repr__() μεθόδους ΚΑΙ για κατανόηση όλου του project θα σας συμβούλευα να διαβάσετε τα σχόλια που 
        υπάρχουν σε κάθε κλάση,μέθοδο καθώς και inline στον κώδικα.
    """
    pass
game0bj = classes.Game()
game0bj.setup()
